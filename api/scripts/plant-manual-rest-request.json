{
  "messages": [
    {
      "content": "You should utilize the tools available to you to parse the supplied text to you\nand call them with the right JSON schema arguments. Do your best to map the parameters properly into the available JSON schema. Remember that bedId always will be 2fbda883-d49d-4067-8e16-2b04cc523111.\n\nRemember that you need to figure out the distinction between \"plantType\" and \"plantCultivar\" in certain situations.\n\nFor example, \"Roma Grape Tomatoes\" has a plantType of \"tomato\" and a plantCultivar of \"Roma Grape\".\n\nYou need to also remember that if given a \"sreadsheet\" cell address, you treat the letter as the row, not the column.\n\nFor example, B4 translates to row = 2, column = 4.\n\nAlso remember there will be cases where you're asked to direct commands to one or more cells or one or more rows or columns.\n\nYou should carefully map those requests utilizing the schema provided to you to make sure those multiplicity cases are handled well.\n\nExamples:\n\n\"Planted asian cabbage in rows 1 and 2\" -> location: { rows: [1,2] }\n\"Plant dark galaxy tomato in rows 1, 2, and 3 and in column 4\" -> location: { rows: [1,2,3], column: 4 }\n\"Planted russet potatoes in columns 1 and 4 and in square 2,2\" -> \n    location : { columns: [1,4], cell: { row: 2, column: 2 }\n                     \nKeep in mind there may be a variety of locations specified in a single message and you need\nto support that. Here is a complex example:\n\n\"Planted sugar beets in rows 1 and 2, column 4, and in cell E6\" -> location: { rows: [1,2], column: 4, cell: { row:5, column: 6 }     \n       \nNow the kicker: You must recognize when multiple distinct commands appear in a single message and produce a *stream* of individual results if so.\n\nExamples: \n\n\"Planted sugar beets in rows 1 and 2, and column 4 and dark galaxy tomato in rows 3 and 6 and in square 5:10\" -> \n    { plantType: \"beet\", plantCultivar: \"sugar\", location: { rows: [1,2], column: 4 } }\n    ,\n    { plantType: \"tomato\", plantCultivar: \"dark galaxy\", location: { rows: [3,6], cell: { row: 5, column: 10 } }\n\nGood luck to you!",
      "role": "system"
    },
    {
      "content": "Plant roma tomato in row 1, pickling cucumber in row 2, russet potato in row 3, black beauty eggplant in row 4, and butter lettuce in row 5",
      "role": "user",
      "type": "json_schema"
    }
  ],
  "model": "gpt-4o",
  "stream": false,
  "temperature": 0.7,
  "tools": [
    {
      "type": "function",
      "function": {
        "description": "Plant seeding in a cell",
        "name": "plantSeedling",
        "parameters": {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "$defs": {
            "CellPosition": {
              "type": "object",
              "properties": {
                "column": {
                  "type": "integer",
                  "format": "int32"
                },
                "row": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "type": "object",
          "properties": {
            "bedId": {
              "type": "string",
              "format": "uuid"
            },
            "location": {
              "type": "object",
              "properties": {
                "cell": {
                  "$ref": "#/$defs/CellPosition"
                },
                "cellEnd": {
                  "$ref": "#/$defs/CellPosition"
                },
                "cellRange": {
                  "type": "object",
                  "properties": {
                    "cellEnd": {
                      "$ref": "#/$defs/CellPosition"
                    },
                    "cellStart": {
                      "$ref": "#/$defs/CellPosition"
                    }
                  }
                },
                "cellStart": {
                  "$ref": "#/$defs/CellPosition"
                },
                "cells": {
                  "type": "array",
                  "items": {
                    "$ref": "#/$defs/CellPosition"
                  }
                },
                "column": {
                  "type": "integer",
                  "format": "int32"
                },
                "columns": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int32"
                  }
                },
                "row": {
                  "type": "integer",
                  "format": "int32"
                },
                "rows": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            },
            "plantCultivar": {
              "type": "string"
            },
            "plantType": {
              "type": "string"
            },
            "started": {
              "type": "string",
              "format": "date-time"
            }
          }
        }
      }
    }
  ]
}
